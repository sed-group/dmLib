name: release
on:
  # the 1st condition
  release:
    branches: [master]
    types: [published]

env:
  documentation-source-directory: ./docs
  documentation-build-directory: ./docs/build
  deploy-python-version: '3.11'

jobs:
  docs:
    name: documentation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]

    steps:

    - name: Checkout
      uses: actions/checkout@master
      with:
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: setup pandoc environment
      uses: r-lib/actions/setup-pandoc@v1
      with:
        pandoc-version: '2.3' # The pandoc version to download (if necessary) and use.

    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_dev.txt
        echo "# Test" | pandoc -t html

    - name: Build flit package and install dependencies
      run: |
        # install package using flit locally to run documentation notebooks
        flit build
        flit install --deps=develop --symlink

    - name: Build documentation
      run: |
        sphinx-build ${{env.documentation-source-directory}} ${{env.documentation-build-directory}}

    - name: Cache built documentation
      uses: actions/cache@v2
      env:
        cache-name: cache-docs
      with:
        path: ${{env.documentation-build-directory}} # documentation path
        key: ${{ runner.os }}-docs-${{ env.cache-name }}-python-${{ matrix.python-version }}

  tests:
    name: pre-release tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]

    steps:

    - name: Checkout
      uses: actions/checkout@master
      with:
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_dev.txt
        pip install -r requirements.txt
        pip install -e .

    - name: Build flit package and install dependencies
      run: |
        # install package using flit locally to run documentation notebooks
        flit build
        flit install --deps=develop --symlink

    - name: Run unit tests
      run: python -m pytest --import-mode=append tests/

  deploy_docs:
    name: publish_docs
    needs: [docs,tests]
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@master
      with:
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

    - name: Cache built documentation
      uses: actions/cache@v2
      env:
        cache-name: cache-docs
      with:
        path: ${{env.documentation-build-directory}} # built documentation path
        key: ${{ runner.os }}-docs-${{ env.cache-name }}-python-${{env.deploy-python-version}}
    
    - name: Deploy documentation to gh pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        publish_branch: gh-pages
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ${{env.documentation-build-directory}}
        force_orphan: true

  deploy_test:
    name: publish test PyPI
    needs: [docs,tests]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v2


    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{env.deploy-python-version}}
        cache: 'pip'

    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_dev.txt
        pip install -r requirements.txt

    - name: Build and publish to TestPyPI
      run: |
        flit publish
      env:
        FLIT_INDEX_URL: https://test.pypi.org/legacy/
        FLIT_USERNAME: __token__
        FLIT_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}

  deploy:
    name: publish PyPI
    needs: [deploy_test]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v2


    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{env.deploy-python-version}}
        cache: 'pip'

    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_dev.txt
        pip install -r requirements.txt

    - name: Build and publish to TestPyPI
      run: |
        flit publish
      env:
        FLIT_INDEX_URL: https://upload.pypi.org/legacy/
        FLIT_USERNAME: __token__
        FLIT_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
